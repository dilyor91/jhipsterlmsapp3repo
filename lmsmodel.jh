entity Course {
    courseName String required
    courseCode String required
    courseImagePath String 
    courseStartDate Instant required
    courseEndDate Instant required
    courseFormat String required
    published Boolean required
    selfEnrollment Boolean
    selfEnrollmentCode String
    storageQuota Integer required
    status Boolean required
}

entity CourseSection {
    sectionName String required
}

entity Accounts {
    username String required
    fullName String required
    sortableName String required
    avatarImageUrl String
    phone String required
    locale String
    gender String required
    userType UserType required
    userStatus UserStatus required
}

entity Enrollment {
   enrollmentStatus EnrollmentStatusEnum required
   lastActivityAt Instant
   enrollmentStartAt Instant
   enrollmentEndAt Instant
}

entity User{

}

entity Announcement {
   title String required
   content String required
   attachmentId Long
   delayPost Boolean
   postAt Instant
   published Boolean
}

enum EnrollmentStatusEnum {
   ACTIVE, REJECTED, PENDING
}

enum UserType {
  STUDENT, TEACHER
}

enum UserStatus {
  ACTIVE, PENDING, BLOCKED
}

relationship OneToOne {
  Course{user} to User
}

relationship ManyToOne {
    Enrollment{user} to User
    CourseSection{course} to Course
    Enrollment{courseSection} to CourseSection
    Enrollment{course} to Course
    Announcement{course} to Course
}

relationship ManyToMany {
    Announcement{courseSection} to CourseSection{announcement}
}

// Set pagination options
paginate  Course, CourseSection, Enrollment, Accounts, Announcement with pagination

// Use Data Transfer Objects (DTO)
dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
